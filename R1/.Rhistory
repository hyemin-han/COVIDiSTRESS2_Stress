(1+secondary|residing_country),
data=data.filtered, family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415,prior=prior.coef)
pss.sec.2.sps <- brms::brm(pss ~ secondary*sps+ gender + education + work_location + age+
SSS_faml+ relationship_status+
(1+secondary+sps|residing_country),
data=data.filtered, family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415,prior=prior.coef)
# comparison
bf.pss.sec.2.sps <- bayes_factor(pss.sec.2.sps,pss.sec.2,log=T)
bf.pss.sec.2.sps
# testing
hypothesis(pss.sec.2.sps, 'pss > secondary')
# testing
hypothesis(pss.sec.2.sps, 'secondary > 0')
hypothesis(pss.sec.2.sps, 'sps <0')
hypothesis(pss.sec.2.sps, 'secondary#sps=0')
pss.sec.2.sps
hypothesis(pss.sec.2.sps, 'secondary:sps=0')
res.sec.2 <- brms::brm(resilience ~ secondary+ gender + education + work_location + age+
SSS_faml+ relationship_status+
(1+secondary|residing_country),
data=data.filtered, family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415,prior=prior.coef)
res.sec.2.sps <- brms::brm(resilience ~ secondary*sps+ gender + education + work_location + age+
SSS_faml+ relationship_status+
(1+secondary+sps|residing_country),
data=data.filtered, family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415,prior=prior.coef)
res.sec.2.sps
# comparison
bf.res.sec.2.sps <- bayes_factor(res.sec.2.sps,res.sec.2,log=T)
bf.res.sec.2.sps
# testing
hypothesis(res.sec.2.sps, 'secondary > 0') # Inf
# testing
hypothesis(res.sec.2.sps, 'secondary < 0') # Inf
hypothesis(res.sec.2.sps, 'sps >0') # Inf
hypothesis(res.sec.2.sps, 'secondary:sps=0') # 39.14. including 0
1/.48
save.image("~/Documents/GitHub/COVIDiSTRESS2_Stress/R1/stress_sps.RData")
library(lavaan)
#
load('Stress_aligned.RData')
#
load('../Stress_aligned.RData')
# interactions
data.filtered$secondary <- scale(data.filtered$secondary)
data.filtered$identity <- scale(data.filtered$pss)
data.filtered$resilience <- scale(data.filtered$resilience)
data.filtered$pss <- scale(data.filtered$pss)
# model
'
SEC =~ 1*secondary
ID =~ 1*identity
'
# model
model<-'
SEC =~ 1*secondary
ID =~ 1*identity
'
fit <- sem(model,data.filtered)
summary(fit)
# model
model<-'
SEC =~ 1*secondary
ID =~ 1*identity
SEC ~~ 0*ID
'
fit <- sem(model,data.filtered)
fit
summary(fit)
fitmeasures(fit)
# model
model<-'
SEC =~ 1*secondary
ID =~ 1*identity
SEC ~~ 0*ID
pss ~ SEC + ID
'
fit <- sem(model,data.filtered)
summary(fit)
# model
model<-'
SEC =~ 1*secondary
ID =~ 1*identity
SEC ~~ 0*ID
pss ~ SEC + ID + SEC:ID
'
fit <- sem(model,data.filtered)
# model
model<-'
SEC =~ 1*secondary + pss
ID =~ 1*identity + psss
SEC ~~ 0*ID
'
fit <- sem(model,data.filtered)
# model
model<-'
SEC =~ 1*secondary + pss
ID =~ 1*identity + pss
SEC ~~ 0*ID
'
fit <- sem(model,data.filtered)
# model
model<-'
SEC =~ 1*secondary + resilience
ID =~ 1*identity + resilience
SEC ~~ 0*ID
'
fit <- sem(model,data.filtered)
summary(fit)
# model
model<-'
SEC =~ 1*secondary + resilience
ID =~ 1*identity + resilience
'
fit <- sem(model,data.filtered)
summary(fit)
# model
model<-'
SEC =~ 1*secondary + pss
ID =~ 1*identity + pss
'
fit <- sem(model,data.filtered)
# model
model<-'
SEC =~ 1*secondary + pss
ID =~ 1*identity + pss
SEC_ID =~ 1*secondary + 1*identity + pss
'
fit <- sem(model,data.filtered)
# model
model<-'
SEC =~ 1*secondary + resilience
ID =~ 1*identity + resilience
SEC_ID =~ 1*secondary + 1*identity + resilience
'
fit <- sem(model,data.filtered)
summary(fit)
# model
model<-'
SEC =~ 1*secondary + resilience
ID =~ 1*identity + resilience
SEC_ID =~ 1*secondary + 1*identity + resilience
SEC_ID ~~ 0*SEC
SEC_ID ~~ 0*ID
'
fit <- sem(model,data.filtered)
summary(fit)
# model
model<-'
SEC =~ 1*secondary + resilience
ID =~ 1*identity + resilience
SEC_ID =~ 1*secondary*1*identity + resilience
SEC_ID ~~ 0*SEC
SEC_ID ~~ 0*ID
'
fit <- sem(model,data.filtered)
summary(fit)
# model
model<-'
SEC =~ 1*secondary + resilience
ID =~ 1*identity + resilience
SEC_ID =~ 1*secondary*identity + resilience
SEC_ID ~~ 0*SEC
SEC_ID ~~ 0*ID
'
fit <- sem(model,data.filtered)
summary(fit)
# model
model<-'
SEC =~ 1*secondary + resilience
ID =~ 1*identity + resilience
'
fit <- sem(model,data.filtered)
fit <- sem(model,data.filtered)
fit <- sem(model,data.filtered, estimator='MLR')
summary(fit)
fit <- sem(model,data.filtered, estimator='MLR')
lavInspect(fit,'cov.lv')
# model
model<-'
SEC =~ 1*secondary + pss
ID =~ 1*identity + pss
'
fit <- sem(model,data.filtered, estimator='MLR')
library(blavaan)
bfit <- bsem(model,data.filtered)
fit <- cfa(model,data.filtered, estimator='MLR')
fit <- sem(model,data.filtered, estimator='MLR')
# model
model<-'
SEC =~ 1*secondary + pss
ID =~ 1*identity + pss
SEC ~~ ID
'
fit <- sem(model,data.filtered, estimator='MLR')
# model
model<-'
SEC =~ 1*secondary
ID =~ 1*identity
PSS =~ 1*PSS
PSS ~ SEC + ID
SEC ~~ ID
'
fit <- sem(model,data.filtered, estimator='MLR')
# model
model<-'
SEC =~ 1*secondary
ID =~ 1*identity
PSS =~ 1*pss
PSS ~ SEC + ID
SEC ~~ ID
'
fit <- sem(model,data.filtered, estimator='MLR')
library(psych)
corr.test(data.filtered[,c('pss','secondary','identity')])
# interactions
data.filtered$secondary <- scale(data.filtered$secondary)
data.filtered$identity <- scale(data.filtered$identity)
data.filtered$resilience <- scale(data.filtered$resilience)
data.filtered$pss <- scale(data.filtered$pss)
# model
model<-'
SEC =~ 1*secondary + pss
ID =~ 1*identity  + pss
SEC ~~ ID
'
fit <- sem(model,data.filtered, estimator='MLR')
summary(fit)
fit <- sem(model,data.filtered, estimator='ML')
summary(fit)
#
load('../Stress_aligned.RData')
# interactions
data.filtered$secondary <- scale(data.filtered$secondary)
data.filtered$identity <- scale(data.filtered$identity)
data.filtered$resilience <- scale(data.filtered$resilience)
data.filtered$pss <- scale(data.filtered$pss)
# model
model<-'
SEC =~ 1*secondary + pss
ID =~ 1*identity  + pss
SEC ~~ ID
'
fit <- sem(model,data.filtered, estimator='ML')
summary(fit)
fit <- sem(model,data.filtered, estimator='MLR')
summary(fit)
bfit <- bsem(model,data.filtered, estimator='MLR')
fit <- cfa(model,data.filtered, estimator='MLR')
fit <- sem(model,data.filtered, estimator='MLR')
fit <- sem(model,data.filtered, estimator='WLSMV')
fit <- sem(model,data.filtered, estimator='REML')
summary(fit)
fit <- sem(model,data.filtered, estimator='MLM')
summary(fit)
fit <- sem(model,data.filtered, estimator='MLR')
summary(fit)
# model
model<-'
SEC =~ 1*secondary + pss
ID =~ 1*identity  + pss
SEC ~~ ID*0
'
fit <- sem(model,data.filtered, estimator='MLR')
# model
model<-'
SEC =~ 1*secondary + pss
ID =~ 1*identity  + pss
SEC ~~ 0*ID
'
fit <- sem(model,data.filtered, estimator='MLR')
summary(fit)
# model
model<-'
SEC =~ 1*secondary + resilience
ID =~ 1*identity  + resilience
SEC ~~ ID
'
fit <- sem(model,data.filtered, estimator='MLR')
summary(fit)
bfit <- bsem(model,data.filtered, estimator='MLR')
bfit <- bsem(model,data.filtered)
install.packages(blavaan)
install.packages('blavaan')
install.packages("blavaan")
install.packages("blavaan")
library(lavaan)
library(blavaan)
#
load('../Stress_aligned.RData')
# interactions
data.filtered$secondary <- scale(data.filtered$secondary)
data.filtered$identity <- scale(data.filtered$identity)
data.filtered$resilience <- scale(data.filtered$resilience)
data.filtered$pss <- scale(data.filtered$pss)
# model
model<-'
SEC =~ 1*secondary + resilience
ID =~ 1*identity  + resilience
SEC ~~ ID
'
fit <- sem(model,data.filtered, estimator='MLR')
bfit <- bsem(model,data.filtered)
fit <- sem(model,data.filtered, estimator='MLR', optim.method = "em)
bfit <- bsem(model,data.filtered)
fit
summary(fit)
fit <- sem(model,data.filtered, estimator='MLR', optim.method = 'em')
fit <- sem(model,data.filtered, estimator='MLR', optim.method = 'BFGS')
summary(fit)
data.filtered$SSS_faml <- scale(data.filtered$SSS_faml)
# model
model<-'
SEC =~ 1*secondary + resilience
ID =~ 1*identity  + resilience
SES =~ 1*SSS_faml + resilience
SEC ~~ ID
'
fit <- sem(model,data.filtered, estimator='MLR', optim.method = 'BFGS')
summary(fit)
fit <- sem(model,data.filtered, estimator='MLR', optim.method = 'nlminb')
summary(fit)
fit <- sem(model,data.filtered, estimator='MLR', optim.method = 'L-BFGS-B')
summary(fit)
fitmeasures(fit)
fitMeasures(fit)
summary(fit)
lavInspect(fit)
summary(fit,fit.measures=T)
fit <- sem(model,data.filtered, estimator='MLR', optim.method = 'L-BFGS-B')
summary(fit)
# model
model<-'
SEC =~ 1*secondary + pss
ID =~ 1*identity  + pss
SES =~ 1*SSS_faml + pss
SEC ~~ ID
'
fit <- sem(model,data.filtered, estimator='MLR', optim.method = 'L-BFGS-B')
fitmeasures(fit)
summary(fit)
# model
model<-'
SEC =~ 1*secondary + pss
ID =~ 1*identity  + pss
SEC ~~ ID
'
fit <- sem(model,data.filtered, estimator='MLR', optim.method = 'L-BFGS-B')
summary(fit)
# model
model<-'
SEC =~ 1*secondary + pss
ID =~ 1*identity  + pss
SEC ~~ 0*ID
'
fit <- sem(model,data.filtered, estimator='MLR', optim.method = 'L-BFGS-B')
summary(fit)
fit <- sem(model,data.filtered, estimator='MLR', optim.method = 'L-BFGS-B',
group = 'residing_country')
summary(fit)
fit <- sem(model,data.filtered, estimator='MLR', optim.method = 'L-BFGS-B',
cluster = 'residing_country')
summary(fit)
# model
model<-'
SEC =~ 1*secondary + pss
ID =~ 1*identity  + pss
'
fit <- sem(model,data.filtered, estimator='MLR', optim.method = 'L-BFGS-B',
cluster = 'residing_country')
summary(fit)
# model
model<-'
level: 1
SEC =~ 1*secondary + pss
ID =~ 1*identity  + pss
level: 2
SEC =~ 1*secondary + pss
ID =~ 1*identity  + pss
'
fit <- sem(model,data.filtered, estimator='MLR', optim.method = 'L-BFGS-B',
cluster = 'residing_country')
summary(fit)
fit <- sem(model,data.filtered, estimator='MLR',
cluster = 'residing_country')
summary(fit)
# model
model<-'
level: 1
SEC1 =~ 1*secondary + pss
ID1 =~ 1*identity  + pss
level: 2
SEC2 =~ 1*secondary + pss
ID2 =~ 1*identity  + pss
'
fit <- sem(model,data.filtered, estimator='MLR',
cluster = 'residing_country')
summary(fit)
model.res <-'
GID =~ identity_1_0neutral + identity_2_0neutral+
identity_3_0neutral+identity_4_0neutral
SS =~ secondary_stressors__1 + secondary_stressors__2+secondary_stressors__3+
secondary_stressors__4 + GID
RES =~ resilience_1 + resilience_2+resilience_3+
resilience_4+resilience_5+resilience_6 + GID
'
fit.res <- sem(model.res,data=data.filtered)
summary(fit.res)
model.res <-'
GID =~ identity_1_0neutral + identity_2_0neutral+
identity_3_0neutral+identity_4_0neutral
SS =~ secondary_stressors__1 + secondary_stressors__2+secondary_stressors__3+
secondary_stressors__4
RES =~ resilience_1 + resilience_2+resilience_3+
resilience_4+resilience_5+resilience_6 + GID + SS
'
fit.res <- sem(model.res,data=data.filtered)
summary(fit.res)
fit.res <- sem(model.res,data=data.filtered, estimator='WLSMV')
summary(fit.res)
model.res <-'
GID =~ identity_1_0neutral + identity_2_0neutral+
identity_3_0neutral+identity_4_0neutral
SS =~ secondary_stressors__1 + secondary_stressors__2+secondary_stressors__3+
secondary_stressors__4
RES =~ resilience_1 + resilience_2+resilience_3+
resilience_4+resilience_5+resilience_6 + GID + SS
SS ~~ GID
'
fit.res <- sem(model.res,data=data.filtered, estimator='WLSMV')
summary(fit.res)
fitmeasures(fit.res)
fit.res <- sem(model.res,data=data.filtered, estimator='WLSMV',
group='residing_country')
fit.res <- sem(model.res,data=data.filtered, estimator='WLSMV',
cluster='residing_country')
fit.res <- sem(model.res,data=data.filtered, estimator='WLSMV')
model.pss <- '
GID =~ identity_1_0neutral + identity_2_0neutral+
identity_3_0neutral+identity_4_0neutral
SS =~ secondary_stressors__1 + secondary_stressors__2+secondary_stressors__3+
secondary_stressors__4
PSS =~ perceived_stress_sca_1 + perceived_stress_sca_2+
perceived_stress_sca_3 + perceived_stress_sca_4 + perceived_stress_sca_5+
perceived_stress_sca_6 + perceived_stress_sca_7 + perceived_stress_sca_8+
perceived_stress_sca_9 + perceived_stress_sca_10 + GID + SS
SS ~~ GID
'
fit.pss <- sem(model.pss,data=data.filtered,estimator='WLSMV')
summary(fit.pss)
fitmeasures(fit.pss)
fit.res <- sem(model.res,data=data.filtered, estimator='MLR')
fit.pss <- sem(model.pss,data=data.filtered,estimator='MLR')
fitmeasures(fit.pss)
fit.res <- sem(model.res,data=data.filtered, estimator='ML')
fit.pss <- sem(model.pss,data=data.filtered,estimator='ML')
fitmeasures(fit.pss)
fitmeasures(fit.res)
fit.pss <- sem(model.pss,data=data.filtered,estimator='MLR')
fit.res <- sem(model.res,data=data.filtered, estimator='MLR')
fitmeasures(fit.pss)
fit.res <- sem(model.res,data=data.filtered, estimator='DWLS')
fit.pss <- sem(model.pss,data=data.filtered,estimator='DWLS')
fitmeasures(fit.pss)
summary(fit.pss)
# Bayesian lavaan
library(blavaan)
?bsem
bfit.res <- bsem(model.res,data=data.filterd)
bfit.res <- bsem(model.res,data=data.filtered,estimator='DWLS')
# SEM
library(lavaan)
library(blavaan)
#
load('../Stress_aligned.RData')
model.res <-'
GID =~ identity_1_0neutral + identity_2_0neutral+
identity_3_0neutral+identity_4_0neutral
SS =~ secondary_stressors__1 + secondary_stressors__2+secondary_stressors__3+
secondary_stressors__4
RES =~ resilience_1 + resilience_2+resilience_3+
resilience_4+resilience_5+resilience_6 + GID + SS
SS ~~ GID
'
fit.res <- sem(model.res,data=data.filtered, estimator='DWLS')
model.pss <- '
GID =~ identity_1_0neutral + identity_2_0neutral+
identity_3_0neutral+identity_4_0neutral
SS =~ secondary_stressors__1 + secondary_stressors__2+secondary_stressors__3+
secondary_stressors__4
PSS =~ perceived_stress_sca_1 + perceived_stress_sca_2+
perceived_stress_sca_3 + perceived_stress_sca_4 + perceived_stress_sca_5+
perceived_stress_sca_6 + perceived_stress_sca_7 + perceived_stress_sca_8+
perceived_stress_sca_9 + perceived_stress_sca_10 + GID + SS
SS ~~ GID
'
fit.pss <- sem(model.pss,data=data.filtered,estimator='DWLS')
# Bayesian lavaan
library(blavaan)
bfit.res <- bsem(model.res,data=data.filtered,estimator='DWLS')
summary(bfit.res)
View(bfit.res)
rm
rm(bfit.res)
save.image("~/Documents/GitHub/COVIDiSTRESS2_Stress/R1/SEM.RData")
